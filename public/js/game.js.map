{"version":3,"sources":["../../src/js/game.js"],"names":["mainElement","document","querySelector","drawMessage","state","turn","winner","winnerColor","full","board","gameSettings","columns","rows","initGameState","dropStone","colList","dropstate","newState","JSON","parse","stringify","indexEmpty","dataset","index","reduce","acc","value","fullCheck","checkFull","colsHtml","col","row","fullCheckChecker","fullcheckstate","stateMessage","messagestate","changeTurn","changestate","makeSearchArrays","startColIndex","startRowIndex","colIncrement","rowIncrement","arraygameSettings","makeArraysgamestate","newSearchArray","colIndex","rowIndex","push","checkFor4color","array","newArray","forEach","val","teller","check","accumulator","itemval","length","console","log","checkWinner","searchForWinners","c4gameSettings","c4gamestate","rowArray","colArray","map","Arrays","generateBoardHtml","colHtml","rowsHtml","drawturn","boardElement","classList","add","remove","drawBoard","htmlElement","createElement","id","innerHTML","appendChild","changecolorstone","color","htmlboard","addEventListener","event","target","closest","matches","newDrop","textContent"],"mappings":"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","sourcesContent":["// 1 MODEL\r\n\r\nconst mainElement = document.querySelector('main');\r\nconst drawMessage = document.querySelector('.drawMessage');\r\n\r\nlet state = {\r\n  turn: null,\r\n  winner: false,\r\n  winnerColor: null,\r\n  full: false,\r\n  board: null,\r\n};\r\n\r\nconst gameSettings = {\r\n  columns: 7,\r\n  rows: 6,\r\n};\r\n\r\n// 2 PURE functions\r\n\r\nfunction initGameState() {\r\n  state = {\r\n    turn: 'yellow',\r\n    winner: false,\r\n    winnerColor: null,\r\n    full: false,\r\n    board: [\r\n      ['empty', 'empty', 'empty', 'empty', 'empty', 'empty'],\r\n      ['empty', 'empty', 'empty', 'empty', 'empty', 'empty'],\r\n      ['empty', 'empty', 'empty', 'empty', 'empty', 'empty'],\r\n      ['empty', 'empty', 'empty', 'empty', 'empty', 'empty'],\r\n      ['empty', 'empty', 'empty', 'empty', 'empty', 'empty'],\r\n      ['empty', 'empty', 'empty', 'empty', 'empty', 'empty'],\r\n      ['empty', 'empty', 'empty', 'empty', 'empty', 'empty'],\r\n    ],\r\n  };\r\n  return state;\r\n}\r\n\r\nstate = initGameState();\r\n\r\nfunction dropStone(colList, dropstate) {\r\n  const newState = JSON.parse(JSON.stringify(dropstate));\r\n  const indexEmpty = newState.board[colList.dataset.index].reduce((acc, value, index) => {\r\n    if (acc === false) {\r\n      if (value === 'empty') {\r\n        return index;\r\n      }\r\n      return acc;\r\n    }\r\n    return acc;\r\n  }, false);\r\n\r\n  if (indexEmpty === false) {\r\n    return false;\r\n  }\r\n  newState.board[colList.dataset.index][indexEmpty] = state.turn;\r\n  return newState;\r\n}\r\n\r\nfunction fullCheck(board) {\r\n  const checkFull = board.reduce((colsHtml, col) => col.reduce((acc, row) => {\r\n    if (row === 'empty') {\r\n      return false;\r\n    }\r\n    return acc;\r\n  }, colsHtml), true);\r\n  return checkFull;\r\n}\r\n\r\nfunction fullCheckChecker(fullcheckstate) {\r\n  const newState = JSON.parse(JSON.stringify(fullcheckstate));\r\n  if (fullCheck(newState.board) === true) {\r\n    newState.full = true;\r\n  }\r\n  return newState;\r\n}\r\n\r\nfunction stateMessage(messagestate) {\r\n  const newState = JSON.parse(JSON.stringify(messagestate));\r\n  if (newState.full === true) {\r\n    return 'gelijk';\r\n  }\r\n\r\n  if (newState.winner === true) {\r\n    return 'winner ' + newState.winnerColor;\r\n  }\r\n\r\n  return '';\r\n}\r\n\r\nfunction changeTurn(changestate) {\r\n  const newState = JSON.parse(JSON.stringify(changestate));\r\n\r\n  if (newState.turn === 'yellow') {\r\n    newState.turn = 'red';\r\n  } else {\r\n    newState.turn = 'yellow';\r\n  }\r\n  return newState;\r\n}\r\n\r\nfunction makeSearchArrays(startColIndex, startRowIndex, colIncrement, rowIncrement,\r\n  arraygameSettings, makeArraysgamestate) {\r\n  const newState = JSON.parse(JSON.stringify(makeArraysgamestate));\r\n  const newSearchArray = [];\r\n  let colIndex = startColIndex;\r\n  let rowIndex = startRowIndex;\r\n  while (colIndex < gameSettings.columns\r\n  && rowIndex < gameSettings.rows\r\n  && colIndex >= 0 && rowIndex >= 0) {\r\n    newSearchArray.push(newState.board[colIndex][rowIndex]);\r\n    colIndex += colIncrement;\r\n    rowIndex += rowIncrement;\r\n  }\r\n  return newSearchArray;\r\n}\r\n\r\nfunction checkFor4color(array) {\r\n  const newArray = JSON.parse(JSON.stringify(array));\r\n  newArray.forEach(function (value) {\r\n    value.reduce(function (acc, val) {\r\n      let teller = 0;\r\n      const check = val.reduce(function (accumulator, itemval) {\r\n        if (itemval === 'empty') {\r\n          teller += 1;\r\n        } else {\r\n          teller = 0;\r\n        }\r\n\r\n        if (teller === 4) {\r\n          return true;\r\n        }\r\n      }, false);\r\n\r\n      if (check) {\r\n        return acc[acc.length] = val;\r\n      }\r\n      return acc;\r\n    }, []);\r\n  });\r\n  console.log(newArray);\r\n  return newArray;\r\n}\r\n\r\nfunction checkWinner(array) {\r\n\r\n}\r\n\r\n\r\nfunction searchForWinners(c4gameSettings, c4gamestate) {\r\n  const rowArray = [];\r\n  const colArray = [];\r\n\r\n  rowArray.push(c4gamestate.board.map(function (value, index) {\r\n    return makeSearchArrays(index, 0, 0, 1, c4gameSettings, c4gamestate);\r\n  }));\r\n\r\n  colArray.push(c4gamestate.board.map(function (value, index) {\r\n    return makeSearchArrays(0, index, 1, 0, c4gameSettings, c4gamestate);\r\n  }));\r\n\r\n\r\n  const Arrays = [checkFor4color(rowArray), checkFor4color(colArray)];\r\n\r\n  checkWinner(Arrays);\r\n}\r\n\r\n// 3 VIEW functions\r\n\r\nfunction generateBoardHtml(board) {\r\n  return board.reduce((colsHtml, col, colIndex) => {\r\n    let colHtml = '<div class=\"col\" data-index=\"' + colIndex + '\">';\r\n    colHtml += col.reduce((rowsHtml, row) => '<div class=\"row ' + row + '\"></div>' + rowsHtml, '');\r\n    colHtml += '</div>';\r\n    return colsHtml + colHtml;\r\n  }, '');\r\n}\r\n\r\nfunction drawturn(boardElement, turn) {\r\n  boardElement.classList.add(turn);\r\n  boardElement.classList.remove(changeTurn(turn));\r\n}\r\n\r\nfunction drawBoard(board, turn, htmlElement, boardElement) {\r\n  if (!boardElement) {\r\n    boardElement = document.createElement('div');\r\n    boardElement.id = 'board';\r\n  }\r\n  drawturn(boardElement, turn);\r\n  boardElement.innerHTML = generateBoardHtml(board);\r\n  htmlElement.appendChild(boardElement);\r\n  return boardElement;\r\n}\r\n\r\n\r\nfunction changecolorstone(color, board) {\r\n  if (color === 'yellow') {\r\n    board.classList.remove('yellow');\r\n    board.classList.add('red');\r\n  } else {\r\n    board.classList.remove('red');\r\n    board.classList.add('yellow');\r\n  }\r\n}\r\n\r\n\r\n// 4 EVENTS\r\n\r\nconst htmlboard = drawBoard(state.board, state.turn, mainElement);\r\n\r\nhtmlboard.addEventListener('click', (event) => {\r\n  const colList = event.target.closest('.col');\r\n  if (event.target.matches('.col,.row')) {\r\n    const newDrop = dropStone(colList, state);\r\n    if (newDrop) {\r\n      state = newDrop;\r\n      state = fullCheckChecker(state);\r\n      searchForWinners(gameSettings, state);\r\n      changecolorstone(state.turn, htmlboard);\r\n      state = changeTurn(state);\r\n      drawMessage.textContent = stateMessage(state);\r\n      drawBoard(state.board, state.turn, mainElement, htmlboard);\r\n    } else if (state.full === true) {\r\n      initGameState();\r\n      drawBoard(state.board, state.turn, mainElement, htmlboard);\r\n      drawMessage.textContent = stateMessage(state);\r\n    }\r\n  }\r\n});\r\n"],"file":"game.js"}