{"version":3,"sources":["../../src/js/game.js"],"names":["mainElement","document","querySelector","drawMessage","state","turn","winner","winnerColor","full","board","initGameState","dropStone","colList","dropstate","newState","JSON","parse","stringify","indexEmpty","dataset","index","reduce","acc","value","fullCheck","checkFull","colsHtml","col","row","fullCheckChecker","fullcheckstate","stateMessage","messagestate","changeTurn","changestate","generateBoardHtml","colIndex","colHtml","rowsHtml","drawBoard","htmlElement","boardElement","createElement","id","classList","add","innerHTML","appendChild","changecolorstone","color","remove","htmlboard","addEventListener","event","target","closest","matches","newDrop","textContent"],"mappings":"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","sourcesContent":["// 1 MODEL\r\n\r\nconst mainElement = document.querySelector('main');\r\nconst drawMessage = document.querySelector('.drawMessage');\r\n\r\nlet state = {\r\n  turn: null,\r\n  winner: false,\r\n  winnerColor: null,\r\n  full: false,\r\n  board: null,\r\n};\r\n\r\nfunction initGameState() {\r\n  state = {\r\n    turn: 'yellow',\r\n    winner: false,\r\n    winnerColor: null,\r\n    full: false,\r\n    board: [\r\n      ['empty', 'empty', 'empty', 'empty', 'empty', 'empty'],\r\n      ['empty', 'empty', 'empty', 'empty', 'empty', 'empty'],\r\n      ['empty', 'empty', 'empty', 'empty', 'empty', 'empty'],\r\n      ['empty', 'empty', 'empty', 'empty', 'empty', 'empty'],\r\n      ['empty', 'empty', 'empty', 'empty', 'empty', 'empty'],\r\n      ['empty', 'empty', 'empty', 'empty', 'empty', 'empty'],\r\n      ['empty', 'empty', 'empty', 'empty', 'empty', 'empty'],\r\n    ],\r\n  };\r\n}\r\n\r\ninitGameState();\r\n\r\n\r\n// 2 PURE functions\r\n\r\nfunction dropStone(colList, dropstate) {\r\n  const newState = JSON.parse(JSON.stringify(dropstate));\r\n  const indexEmpty = newState.board[colList.dataset.index].reduce((acc, value, index) => {\r\n    if (acc === false) {\r\n      if (value === 'empty') {\r\n        return index;\r\n      }\r\n      return acc;\r\n    }\r\n    return acc;\r\n  }, false);\r\n\r\n  if (indexEmpty === false) {\r\n    return false;\r\n  }\r\n  newState.board[colList.dataset.index][indexEmpty] = state.turn;\r\n  return newState;\r\n}\r\n\r\nfunction fullCheck(board) {\r\n  const checkFull = board.reduce((colsHtml, col) => col.reduce((acc, row) => {\r\n    if (row === 'empty') {\r\n      return false;\r\n    }\r\n    return acc;\r\n  }, colsHtml), true);\r\n  return checkFull;\r\n}\r\n\r\nfunction fullCheckChecker(fullcheckstate) {\r\n  const newState = JSON.parse(JSON.stringify(fullcheckstate));\r\n  if (fullCheck(newState.board) === true) {\r\n    newState.full = true;\r\n  }\r\n  return newState;\r\n}\r\n\r\nfunction stateMessage(messagestate) {\r\n  const newState = JSON.parse(JSON.stringify(messagestate));\r\n  if (newState.full === true) {\r\n    return 'gelijk';\r\n  }\r\n\r\n  if (newState.winner === true) {\r\n    return 'winner ' + newState.winnerColor;\r\n  }\r\n\r\n  return '';\r\n}\r\n\r\nfunction changeTurn(changestate) {\r\n  const newState = JSON.parse(JSON.stringify(changestate));\r\n\r\n  if (newState.turn === 'yellow') {\r\n    newState.turn = 'red';\r\n  } else {\r\n    newState.turn = 'yellow';\r\n  }\r\n  return newState;\r\n}\r\n\r\n\r\n// 3 VIEW functions\r\n\r\nfunction generateBoardHtml(board) {\r\n  return board.reduce((colsHtml, col, colIndex) => {\r\n    let colHtml = '<div class=\"col\" data-index=\"' + colIndex + '\">';\r\n    colHtml += col.reduce((rowsHtml, row) => '<div class=\"row ' + row + '\"></div>' + rowsHtml, '');\r\n    colHtml += '</div>';\r\n    return colsHtml + colHtml;\r\n  }, '');\r\n}\r\n\r\nfunction drawBoard(board, turn, htmlElement, boardElement) {\r\n  if (!boardElement) {\r\n    boardElement = document.createElement('div');\r\n  }\r\n  boardElement.id = 'board';\r\n  boardElement.classList.add(turn);\r\n  boardElement.innerHTML = generateBoardHtml(board);\r\n  htmlElement.appendChild(boardElement);\r\n  return boardElement;\r\n}\r\n\r\n\r\nfunction changecolorstone(color, board) {\r\n  if (color === 'yellow') {\r\n    board.classList.remove('yellow');\r\n    board.classList.add('red');\r\n  } else {\r\n    board.classList.remove('red');\r\n    board.classList.add('yellow');\r\n  }\r\n}\r\n\r\n\r\n// 4 EVENTS\r\n\r\nconst htmlboard = drawBoard(state.board, state.turn, mainElement);\r\n\r\nhtmlboard.addEventListener('click', (event) => {\r\n  const colList = event.target.closest('.col');\r\n  if (event.target.matches('.col,.row')) {\r\n    const newDrop = dropStone(colList, state);\r\n    if (newDrop) {\r\n      state = newDrop;\r\n      state = fullCheckChecker(state);\r\n      changecolorstone(state.turn, htmlboard);\r\n      state = changeTurn(state);\r\n      drawMessage.textContent = stateMessage(state);\r\n      drawBoard(state.board, state.turn, mainElement, htmlboard);\r\n    } else if (state.full === true) {\r\n      initGameState();\r\n      drawBoard(state.board, state.turn, mainElement, htmlboard);\r\n      drawMessage.textContent = stateMessage(state);\r\n    }\r\n  }\r\n});\r\n"],"file":"game.js"}